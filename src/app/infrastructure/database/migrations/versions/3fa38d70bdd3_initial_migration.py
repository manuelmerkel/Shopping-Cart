"""Initial migration

Revision ID: 3fa38d70bdd3
Revises: 
Create Date: 2024-05-03 23:03:01.780943

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy import Inspector

# revision identifiers, used by Alembic.
revision: str = '3fa38d70bdd3'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    conn = op.get_bind()
    inspector = Inspector.from_engine(conn)

    if 'cart' not in inspector.get_table_names():
        op.create_table('cart',
                        sa.Column('id', sa.Integer, primary_key=True),
                        sa.Column('user_id', sa.Integer, nullable=True),
                        sa.Column('product_id', sa.Integer, nullable=True),
                        sa.Column('created_at', sa.DateTime(), nullable=True,
                                  server_default=sa.text('CURRENT_TIMESTAMP')),
                        sa.Column('updated_at', sa.DateTime(), nullable=True,
                                  server_default=sa.text('CURRENT_TIMESTAMP')),
                        sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_cart_user_id_users'),
                        sa.ForeignKeyConstraint(['product_id'], ['products.id'], name='fk_cart_product_id_products')
                        )
    else:
        op.add_column('cart', sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'),
                                        nullable=True))
        op.add_column('cart', sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'),
                                        nullable=True))
        op.alter_column('cart', 'user_id',
                        existing_type=sa.INTEGER(),
                        nullable=True)
        op.alter_column('cart', 'product_id',
                        existing_type=sa.INTEGER(),
                        nullable=True)
        op.drop_constraint(None, 'cart', type_='foreignkey')
        op.drop_constraint(None, 'cart', type_='foreignkey')
        op.create_foreign_key(op.f('fk_cart_product_id_products'), 'cart', 'products', ['product_id'], ['product_id'])
        op.create_foreign_key(op.f('fk_cart_user_id_users'), 'cart', 'users', ['user_id'], ['user_id'])
        op.drop_column('cart', 'productId')
        op.drop_column('cart', 'userId')

    if 'categories' not in inspector.get_table_names():
        op.create_table('categories',
                        sa.Column('category_id', sa.Integer, primary_key=True),
                        sa.Column('name', sa.String(), nullable=True),
                        sa.Column('created_at', sa.DateTime(), nullable=True,
                                  server_default=sa.text('CURRENT_TIMESTAMP')),
                        sa.Column('updated_at', sa.DateTime(), nullable=True,
                                  server_default=sa.text('CURRENT_TIMESTAMP'))
                        )
    else:
        op.add_column('categories', sa.Column('category_id', sa.Integer(), nullable=True))
        op.add_column('categories',
                      sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'),
                                nullable=True))
        op.add_column('categories',
                      sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'),
                                nullable=True))
        op.alter_column('categories', 'name',
                        existing_type=sa.TEXT(),
                        type_=sa.String(),
                        nullable=True)
        op.drop_column('categories', 'categoryId')

    if 'order_items' not in inspector.get_table_names():
        op.create_table('order_items',
                        sa.Column('order_item_id', sa.Integer, primary_key=True),
                        sa.Column('order_id', sa.Integer, nullable=True),
                        sa.Column('product_id', sa.Integer, nullable=True),
                        sa.Column('created_at', sa.DateTime(), nullable=True,
                                  server_default=sa.text('CURRENT_TIMESTAMP')),
                        sa.Column('updated_at', sa.DateTime(), nullable=True,
                                  server_default=sa.text('CURRENT_TIMESTAMP')),
                        sa.Column('quantity', sa.Integer(), nullable=True),
                        sa.ForeignKeyConstraint(['order_id'], ['orders.order_id'],
                                                name='fk_order_items_order_id_orders'),
                        sa.ForeignKeyConstraint(['product_id'], ['products.product_id'],
                                                name='fk_order_items_product_id_products')
                        )
    else:
        op.add_column('order_items', sa.Column('order_item_id', sa.Integer(), nullable=True))
        op.add_column('order_items', sa.Column('order_id', sa.Integer(), nullable=True))
        op.add_column('order_items', sa.Column('product_id', sa.Integer(), nullable=True))
        op.add_column('order_items',
                      sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'),
                                nullable=True))
        op.add_column('order_items',
                      sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'),
                                nullable=True))
        op.alter_column('order_items', 'quantity',
                        existing_type=sa.INTEGER(),
                        nullable=True)
        op.drop_constraint(None, 'order_items', type_='foreignkey')
        op.drop_constraint(None, 'order_items', type_='foreignkey')
        op.create_foreign_key(op.f('fk_order_items_order_id_orders'), 'order_items', 'orders', ['order_id'],
                              ['order_id'])
        op.create_foreign_key(op.f('fk_order_items_product_id_products'), 'order_items', 'products', ['product_id'],
                              ['product_id'])
        op.drop_column('order_items', 'productId')
        op.drop_column('order_items', 'orderId')
        op.drop_column('order_items', 'orderItemId')

    if 'orders' not in inspector.get_table_names():
        op.create_table('orders',
                        sa.Column('order_id', sa.Integer, primary_key=True),
                        sa.Column('user_id', sa.Integer, nullable=True),
                        sa.Column('total', sa.Float(), nullable=True),
                        sa.Column('created_at', sa.DateTime(), nullable=True,
                                  server_default=sa.text('CURRENT_TIMESTAMP')),
                        sa.Column('updated_at', sa.DateTime(), nullable=True,
                                  server_default=sa.text('CURRENT_TIMESTAMP')),
                        sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name='fk_orders_user_id_users')
                        )
    else:
        op.add_column('orders', sa.Column('order_id', sa.Integer(), nullable=True))
        op.add_column('orders', sa.Column('user_id', sa.Integer(), nullable=True))
        op.add_column('orders',
                      sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
        op.add_column('orders',
                      sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
        op.alter_column('orders', 'total',
                        existing_type=sa.REAL(),
                        type_=sa.Float(),
                        nullable=True)
        op.drop_constraint(None, 'orders', type_='foreignkey')
        op.create_foreign_key(op.f('fk_orders_user_id_users'), 'orders', 'users', ['user_id'], ['user_id'])
        op.drop_column('orders', 'orderId')
        op.drop_column('orders', 'userId')

    if 'products' not in inspector.get_table_names():
        op.create_table('products',
                        sa.Column('product_id', sa.Integer, primary_key=True),
                        sa.Column('category_id', sa.Integer, nullable=True),
                        sa.Column('name', sa.String(), nullable=True),
                        sa.Column('price', sa.Float(), nullable=True),
                        sa.Column('description', sa.String(), nullable=True),
                        sa.Column('image', sa.String(), nullable=True),
                        sa.Column('stock', sa.Integer(), nullable=True),
                        sa.Column('created_at', sa.DateTime(), nullable=True,
                                  server_default=sa.text('CURRENT_TIMESTAMP')),
                        sa.Column('updated_at', sa.DateTime(), nullable=True,
                                  server_default=sa.text('CURRENT_TIMESTAMP')),
                        sa.ForeignKeyConstraint(['category_id'], ['categories.category_id'],
                                                name='fk_products_category_id_categories')
                        )
    else:
        op.add_column('products', sa.Column('product_id', sa.Integer(), nullable=True))
        op.add_column('products', sa.Column('category_id', sa.Integer(), nullable=True))
        op.add_column('products',
                      sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
        op.add_column('products',
                      sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
        op.alter_column('products', 'name',
                        existing_type=sa.TEXT(),
                        type_=sa.String(),
                        nullable=True)
        op.alter_column('products', 'price',
                        existing_type=sa.REAL(),
                        type_=sa.Float(),
                        nullable=True)
        op.alter_column('products', 'description',
                        existing_type=sa.TEXT(),
                        type_=sa.String(),
                        nullable=True)
        op.alter_column('products', 'image',
                        existing_type=sa.TEXT(),
                        type_=sa.String(),
                        nullable=True)
        op.alter_column('products', 'stock',
                        existing_type=sa.INTEGER(),
                        nullable=True)
        op.drop_constraint(None, 'products', type_='foreignkey')
        op.create_foreign_key(op.f('fk_products_category_id_categories'), 'products', 'categories', ['category_id'],
                              ['category_id'])
        op.drop_column('products', 'productId')
        op.drop_column('products', 'categoryId')

    if 'users' not in inspector.get_table_names():
        op.create_table('users',
                        sa.Column('user_id', sa.Integer, primary_key=True),
                        sa.Column('first_name', sa.String(), nullable=True),
                        sa.Column('last_name', sa.String(), nullable=True),
                        sa.Column('password', sa.String(), nullable=True),
                        sa.Column('email', sa.String(), nullable=True),
                        sa.Column('address1', sa.String(), nullable=True),
                        sa.Column('address2', sa.String(), nullable=True),
                        sa.Column('zipcode', sa.String(), nullable=True),
                        sa.Column('city', sa.String(), nullable=True),
                        sa.Column('state', sa.String(), nullable=True),
                        sa.Column('country', sa.String(), nullable=True),
                        sa.Column('phone', sa.String(), nullable=True),
                        sa.Column('created_at', sa.DateTime(), nullable=True,
                                  server_default=sa.text('CURRENT_TIMESTAMP')),
                        sa.Column('updated_at', sa.DateTime(), nullable=True,
                                  server_default=sa.text('CURRENT_TIMESTAMP'))
                        )
    else:
        op.add_column('users', sa.Column('user_id', sa.Integer(), nullable=True))
        op.add_column('users', sa.Column('first_name', sa.String(), nullable=True))
        op.add_column('users', sa.Column('last_name', sa.String(), nullable=True))
        op.add_column('users',
                      sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
        op.add_column('users',
                      sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
        op.alter_column('users', 'password',
                        existing_type=sa.TEXT(),
                        type_=sa.String(),
                        nullable=True)
        op.alter_column('users', 'email',
                        existing_type=sa.TEXT(),
                        type_=sa.String(),
                        existing_nullable=True)
        op.alter_column('users', 'address1',
                        existing_type=sa.TEXT(),
                        type_=sa.String(),
                        existing_nullable=True)
        op.alter_column('users', 'address2',
                        existing_type=sa.TEXT(),
                        type_=sa.String(),
                        existing_nullable=True)
        op.alter_column('users', 'zipcode',
                        existing_type=sa.TEXT(),
                        type_=sa.String(),
                        existing_nullable=True)
        op.alter_column('users', 'city',
                        existing_type=sa.TEXT(),
                        type_=sa.String(),
                        existing_nullable=True)
        op.alter_column('users', 'state',
                        existing_type=sa.TEXT(),
                        type_=sa.String(),
                        existing_nullable=True)
        op.alter_column('users', 'country',
                        existing_type=sa.TEXT(),
                        type_=sa.String(),
                        existing_nullable=True)
        op.alter_column('users', 'phone',
                        existing_type=sa.TEXT(),
                        type_=sa.String(),
                        existing_nullable=True)
        op.drop_column('users', 'lastName')
        op.drop_column('users', 'firstName')
        op.drop_column('users', 'userId')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('userId', sa.INTEGER(), nullable=True))
    op.add_column('users', sa.Column('firstName', sa.TEXT(), nullable=True))
    op.add_column('users', sa.Column('lastName', sa.TEXT(), nullable=True))
    op.alter_column('users', 'phone',
                    existing_type=sa.String(),
                    type_=sa.TEXT(),
                    existing_nullable=True)
    op.alter_column('users', 'country',
                    existing_type=sa.String(),
                    type_=sa.TEXT(),
                    existing_nullable=True)
    op.alter_column('users', 'state',
                    existing_type=sa.String(),
                    type_=sa.TEXT(),
                    existing_nullable=True)
    op.alter_column('users', 'city',
                    existing_type=sa.String(),
                    type_=sa.TEXT(),
                    existing_nullable=True)
    op.alter_column('users', 'zipcode',
                    existing_type=sa.String(),
                    type_=sa.TEXT(),
                    existing_nullable=True)
    op.alter_column('users', 'address2',
                    existing_type=sa.String(),
                    type_=sa.TEXT(),
                    existing_nullable=True)
    op.alter_column('users', 'address1',
                    existing_type=sa.String(),
                    type_=sa.TEXT(),
                    existing_nullable=True)
    op.alter_column('users', 'email',
                    existing_type=sa.String(),
                    type_=sa.TEXT(),
                    existing_nullable=True)
    op.alter_column('users', 'password',
                    existing_type=sa.String(),
                    type_=sa.TEXT(),
                    nullable=True)
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'created_at')
    op.drop_column('users', 'last_name')
    op.drop_column('users', 'first_name')
    op.drop_column('users', 'user_id')
    op.add_column('products', sa.Column('categoryId', sa.INTEGER(), nullable=True))
    op.add_column('products', sa.Column('productId', sa.INTEGER(), nullable=True))
    op.drop_constraint(op.f('fk_products_category_id_categories'), 'products', type_='foreignkey')
    op.create_foreign_key(None, 'products', 'categories', ['categoryId'], ['categoryId'])
    op.alter_column('products', 'stock',
                    existing_type=sa.INTEGER(),
                    nullable=True)
    op.alter_column('products', 'image',
                    existing_type=sa.String(),
                    type_=sa.TEXT(),
                    nullable=True)
    op.alter_column('products', 'description',
                    existing_type=sa.String(),
                    type_=sa.TEXT(),
                    nullable=True)
    op.alter_column('products', 'price',
                    existing_type=sa.Float(),
                    type_=sa.REAL(),
                    nullable=True)
    op.alter_column('products', 'name',
                    existing_type=sa.String(),
                    type_=sa.TEXT(),
                    nullable=True)
    op.drop_column('products', 'updated_at')
    op.drop_column('products', 'created_at')
    op.drop_column('products', 'category_id')
    op.drop_column('products', 'product_id')
    op.add_column('orders', sa.Column('userId', sa.INTEGER(), nullable=True))
    op.add_column('orders', sa.Column('orderId', sa.INTEGER(), nullable=True))
    op.drop_constraint(op.f('fk_orders_user_id_users'), 'orders', type_='foreignkey')
    op.create_foreign_key(None, 'orders', 'users', ['userId'], ['userId'])
    op.alter_column('orders', 'total',
                    existing_type=sa.Float(),
                    type_=sa.REAL(),
                    nullable=True)
    op.drop_column('orders', 'updated_at')
    op.drop_column('orders', 'created_at')
    op.drop_column('orders', 'user_id')
    op.drop_column('orders', 'order_id')
    op.add_column('order_items', sa.Column('orderItemId', sa.INTEGER(), nullable=True))
    op.add_column('order_items', sa.Column('orderId', sa.INTEGER(), nullable=True))
    op.add_column('order_items', sa.Column('productId', sa.INTEGER(), nullable=True))
    op.drop_constraint(op.f('fk_order_items_product_id_products'), 'order_items', type_='foreignkey')
    op.drop_constraint(op.f('fk_order_items_order_id_orders'), 'order_items', type_='foreignkey')
    op.create_foreign_key(None, 'order_items', 'orders', ['orderId'], ['orderId'])
    op.create_foreign_key(None, 'order_items', 'products', ['productId'], ['productId'])
    op.alter_column('order_items', 'quantity',
                    existing_type=sa.INTEGER(),
                    nullable=True)
    op.drop_column('order_items', 'updated_at')
    op.drop_column('order_items', 'created_at')
    op.drop_column('order_items', 'product_id')
    op.drop_column('order_items', 'order_id')
    op.drop_column('order_items', 'order_item_id')
    op.add_column('categories', sa.Column('categoryId', sa.INTEGER(), nullable=True))
    op.alter_column('categories', 'name',
                    existing_type=sa.String(),
                    type_=sa.TEXT(),
                    nullable=True)
    op.drop_column('categories', 'updated_at')
    op.drop_column('categories', 'created_at')
    op.drop_column('categories', 'category_id')
    op.add_column('cart', sa.Column('userId', sa.INTEGER(), nullable=True))
    op.add_column('cart', sa.Column('productId', sa.INTEGER(), nullable=True))
    op.drop_constraint(op.f('fk_cart_user_id_users'), 'cart', type_='foreignkey')
    op.drop_constraint(op.f('fk_cart_product_id_products'), 'cart', type_='foreignkey')
    op.create_foreign_key(None, 'cart', 'users', ['userId'], ['userId'])
    op.create_foreign_key(None, 'cart', 'products', ['productId'], ['productId'])
    op.alter_column('cart', 'product_id',
                    existing_type=sa.INTEGER(),
                    nullable=True)
    op.alter_column('cart', 'user_id',
                    existing_type=sa.INTEGER(),
                    nullable=True)
    op.drop_column('cart', 'updated_at')
    op.drop_column('cart', 'created_at')
    # ### end Alembic commands ###
